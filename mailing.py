# -*- coding: utf-8 -*-
"""mailing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XgwM-gtoz6austa9yjwYb4fbI2NejUOK
"""

import email, smtplib, ssl
import pathlib
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
'''
Basic Explaination:
	Export Errors through Email using a Temp gmail account, by 
	opening a SSL connection with the google server. 

Required Inputs: 
	Path = (Path to the files Errors Output File):  Would assume to be Outputs/Errors.csv

Sample Execution:
	Email(path = 'Outputs/Errors.csv')
'''

class Email():
	def __init__(self,path=None):
		self.location=path
		subject = "Errors File Attached"
		body = "This file contains all the relevant errors that would be faced"

		sender_email = "cheapernextthing@gmail.com"
		receiver_email = "Yashdawani@vynd.com.au"
		password = "QweRty123*"

		# Create a multipart message and set headers
		message = MIMEMultipart()
		message["From"] = sender_email
		message["To"] = receiver_email
		message["Subject"] = subject
		message["Bcc"] = receiver_email  # Recommended for mass emails

		# Add body to email
		message.attach(MIMEText(body, "plain"))



		text = "Hi Yash!!"

		# Log in to server using secure context and send email
		context = ssl.create_default_context()
		with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
			server.login(sender_email, password)
			server.sendmail(sender_email, receiver_email, text)

a = Email()

